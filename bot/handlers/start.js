import { createUser, getUser } from '../utils/api.js';
import { mainMenuKeyboard } from '../keyboards/mainMenu.js';

// Handle /start command
export async function handleStart(ctx) {
  try {
    const telegramId = ctx.from.id;
    const username = ctx.from.username || '';
    const firstName = ctx.from.first_name || 'User';

    // Check if user already exists
    const userResult = await getUser(telegramId);

    if (userResult.success && userResult.data) {
      // User already exists, show welcome back message
      const user = userResult.data;

      await ctx.reply(
        `üëã –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, ${firstName}!\n\n` +
        `–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:`,
        mainMenuKeyboard()
      );
    } else {
      // New user, show welcome message
      await ctx.reply(
        `üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Status Stock!\n\n` +
        `Status Stock - –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è —Ç–æ—Ä–≥–æ–≤–ª–∏ —Ü–∏—Ñ—Ä–æ–≤—ã–º–∏ —Ç–æ–≤–∞—Ä–∞–º–∏.\n\n` +
        `‚ú® –í—ã –º–æ–∂–µ—Ç–µ:\n` +
        `üõç –ù–∞—Ö–æ–¥–∏—Ç—å –º–∞–≥–∞–∑–∏–Ω—ã –∏ –ø–æ–∫—É–ø–∞—Ç—å —Ç–æ–≤–∞—Ä—ã\n` +
        `üíº –°–æ–∑–¥–∞—Ç—å —Å–≤–æ–π –º–∞–≥–∞–∑–∏–Ω –∏ –ø—Ä–æ–¥–∞–≤–∞—Ç—å (–≤—Å–µ–≥–æ $25 –æ–¥–∏–Ω —Ä–∞–∑)\n\n` +
        `üìå –í—ã –º–æ–∂–µ—Ç–µ –±—ã—Ç—å –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–º –ò –ø—Ä–æ–¥–∞–≤—Ü–æ–º!\n\n` +
        `–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:`,
        mainMenuKeyboard()
      );
    }
  } catch (error) {
    console.error('Error in handleStart:', error);
    await ctx.reply(
      '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.'
    );
  }
}

// Handle back to main menu
export async function handleBackToMain(ctx) {
  try {
    await ctx.answerCbQuery();

    const firstName = ctx.from.first_name || 'User';

    await ctx.editMessageText(
      `üëã –ü—Ä–∏–≤–µ—Ç, ${firstName}!\n\n` +
      `–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:`,
      mainMenuKeyboard()
    );
  } catch (error) {
    console.error('Error in handleBackToMain:', error);
    await ctx.reply(
      '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞.'
    );
  }
}

// Handle help command
export async function handleHelp(ctx) {
  try {
    const helpText = `
‚ÑπÔ∏è **–ü–æ–º–æ—â—å - Status Stock Bot**

**–î–ª—è –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π:**
üîç –ù–∞–π—Ç–∏ –º–∞–≥–∞–∑–∏–Ω - –ø–æ–∏—Å–∫ –º–∞–≥–∞–∑–∏–Ω–æ–≤ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
‚≠êÔ∏è –ú–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏ - —Å–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –ø–æ–¥–ø–∏—Å–æ–∫
üì¶ –ú–æ–∏ –∑–∞–∫–∞–∑—ã - –∏—Å—Ç–æ—Ä–∏—è –≤–∞—à–∏—Ö –∑–∞–∫–∞–∑–æ–≤
üåê –í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ - –ø–æ–ª–Ω–∞—è –≤–µ—Ä—Å–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã

**–î–ª—è –ø—Ä–æ–¥–∞–≤—Ü–æ–≤:**
üè™ –ú–æ–π –º–∞–≥–∞–∑–∏–Ω - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–∞—à–∏–º –º–∞–≥–∞–∑–∏–Ω–æ–º
‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä - –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä
üì¶ –ú–æ–∏ –∑–∞–∫–∞–∑—ã - –∑–∞–∫–∞–∑—ã –≤ –≤–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ
üåê –í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ - –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è

**–°–æ–∑–¥–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞:**
–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–∞–≥–∞–∑–∏–Ω–∞ —Ç—Ä–µ–±—É–µ—Ç—Å—è –æ–ø–ª–∞—Ç–∞ $25 –≤ Bitcoin.
–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –≤—ã —Å–º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–ª—è—Ç—å —Ç–æ–≤–∞—Ä—ã –∏ –ø–æ–ª—É—á–∞—Ç—å –∑–∞–∫–∞–∑—ã.

**–ö–æ–º–∞–Ω–¥—ã:**
/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
/cancel - –û—Ç–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ

**–ü–æ–¥–¥–µ—Ä–∂–∫–∞:**
–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É: @support
    `;

    await ctx.reply(helpText, { parse_mode: 'Markdown' });
  } catch (error) {
    console.error('Error in handleHelp:', error);
    await ctx.reply('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–ø—Ä–∞–≤–∫–∏.');
  }
}

// Handle cancel command
export async function handleCancel(ctx) {
  try {
    // Clear session state
    if (ctx.session) {
      ctx.session.state = null;
      ctx.session.data = {};
    }

    await ctx.reply(
      '‚ùå –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.\n\n' +
      '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.',
      mainMenuKeyboard()
    );
  } catch (error) {
    console.error('Error in handleCancel:', error);
    await ctx.reply('–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.');
  }
}
